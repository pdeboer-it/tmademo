name: Deploy Infra and API

on:
  push:
    branches:
      - main
    paths:
      - infra/**
      - src/api/**
      - .github/workflows/deploy.yaml
  workflow_dispatch:
    inputs:
      resourceGroup:
        description: Azure Resource Group (overrides repo variable)
        required: false
        type: string
      location:
        description: Azure Region (overrides repo variable)
        required: false
        type: string
      webAppName:
        description: App Service name for API (overrides repo variable)
        required: false
        type: string
      planName:
        description: App Service Plan name (fallback creation)
        required: false
        type: string
      planSku:
        description: App Service Plan SKU (e.g., B1, S1)
        required: false
        type: string
      bicepParameters:
        description: Additional Bicep parameters as key=value pairs
        required: false
        type: string

permissions:
  id-token: write
  contents: read

# Configure these as Repository Variables (Settings → Variables → Actions)
# Or pass via workflow_dispatch inputs when running manually
env:
  RESOURCE_GROUP: ${{ inputs.resourceGroup || vars.AZURE_RESOURCE_GROUP }}
  LOCATION: ${{ inputs.location || vars.AZURE_LOCATION || 'eastus' }}
  WEBAPP_NAME: ${{ inputs.webAppName || vars.AZURE_WEBAPP_NAME }}
  PLAN_NAME: ${{ inputs.planName || vars.AZURE_PLAN_NAME || 'tmademo-plan' }}
  PLAN_SKU: ${{ inputs.planSku || vars.AZURE_PLAN_SKU || 'B1' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure CLI webapp extension
        run: az extension add --name webapp --upgrade

      - name: Ensure Resource Group
        shell: bash
        run: |
          if [[ -z "${RESOURCE_GROUP}" ]]; then
            echo "ERROR: RESOURCE_GROUP is not set. Define repo variable AZURE_RESOURCE_GROUP or pass input." >&2
            exit 1
          fi
          if [[ -z "${WEBAPP_NAME}" ]]; then
            echo "ERROR: WEBAPP_NAME is not set. Define repo variable AZURE_WEBAPP_NAME or pass input." >&2
            exit 1
          fi
          az group create --name "$RESOURCE_GROUP" --location "$LOCATION"

      - name: Deploy Bicep to Resource Group
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          region: ${{ env.LOCATION }}
          template: infra/main.bicep
          parameters: appServicePlanName=${{ env.PLAN_NAME }} webAppName=${{ env.WEBAPP_NAME }} skuName=${{ env.PLAN_SKU }} ${{ inputs.bicepParameters }}
          failOnStdErr: false

      - name: Build API
        working-directory: src/api
        run: |
          dotnet restore
          dotnet publish -c Release -o ./publish

      - name: Package API
        run: |
          cd src/api
          rm -f publish.zip || true
          zip -r publish.zip publish

      - name: Deploy API to Azure Web App
        shell: bash
        run: |
          az webapp deploy \
            --resource-group "$RESOURCE_GROUP" \
            --name "$WEBAPP_NAME" \
            --src-path src/api/publish.zip \
            --type zip \
            --clean true

      - name: Web App URL
        run: echo "https://${WEBAPP_NAME}.azurewebsites.net"
